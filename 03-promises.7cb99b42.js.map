{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAGjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEF,WAAUJ,UAEpBO,EAAO,CAAEH,WAAUJ,S,GAEpBA,E,IA0BPJ,EAAKC,KAAKc,iBAAiB,UAtBV,SAAAC,GACfA,EAAEC,iBAMF,IAJA,IAAMC,EAAQC,OAAOnB,EAAKI,MAAMgB,OAC1Bf,EAAOc,OAAOnB,EAAKK,KAAKe,OACxBd,EAASa,OAAOnB,EAAKM,OAAOc,OAEzBC,EAAI,EAAGA,GAAKf,EAAQe,GAAK,EAAG,CAGnCd,EAAcc,EAFGH,EAAQb,GAAQgB,EAAI,IAGlCC,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUJ,EAAKmB,EAALnB,MACjBoB,QAAQC,IAAI,uBAAwCC,OAAflB,EAAS,QAAYkB,OAANtB,EAAM,OAC1DuB,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAoCH,OAAflB,EAAS,QAAYkB,OAANtB,EAAM,M,IAEnE0B,OAAM,SAAAP,G,IAAGf,EAAQe,EAARf,SAAUJ,EAAKmB,EAALnB,MAClBoB,QAAQC,IAAI,sBAAqCC,OAAflB,EAAS,QAAYkB,OAANtB,EAAM,OACvDuB,EAAA7B,GAAS8B,OAAOG,QAAQ,oBAAmCL,OAAflB,EAAS,QAAYkB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name = delay]'),\n  step: document.querySelector('[name = step]'),\n  amount: document.querySelector('[name = amount]'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst onSubmit = e => {\n  e.preventDefault();\n\n  const delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const newDelay = delay + step * (i - 1);\n    // console.log({ i, newDelay });\n    createPromise(i, newDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n};\n\nrefs.form.addEventListener('submit', onSubmit);"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","i","then","param","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.7cb99b42.js.map"}